#!/usr/bin/env @PYTHON@
# -*- Mode: Python -*-
# GObject-Introspection - a framework for introspecting GObject libraries
# Copyright (C) 2008  Johan Dahlin
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
# 02110-1301, USA.
#
from __future__ import absolute_import
from __future__ import division
from __future__ import print_function
from __future__ import unicode_literals

import os
import sys

if sys.version_info.major < 3:
    import __builtin__ as builtins
else:
    import builtins

builtins.__dict__['DATADIR'] = "@datarootdir@"

debug = os.getenv('GI_SCANNER_DEBUG', '').split(',')
if debug:
    if 'pydevd' in debug:
        # http://pydev.org/manual_adv_remote_debugger.html
        pydevdpath = os.getenv('PYDEVDPATH', None)
        if pydevdpath is not None and os.path.isdir(pydevdpath):
            sys.path.insert(0, pydevdpath)
            import pydevd
            pydevd.settrace()
    else:
        def on_exception(exctype, value, tb):
            print("Caught exception: %r %r" % (exctype, value))
            import pdb
            pdb.pm()
        sys.excepthook = on_exception

if os.name == 'nt':
    datadir = os.path.join(os.path.dirname(__file__), '..', 'share')
    pylibdir = os.path.join(os.path.dirname(__file__), '..', 'lib', 'gobject-introspection')
else:
    datadir = "@datarootdir@"
    pylibdir = os.path.join('@libdir@', 'gobject-introspection')

srcdir = os.getenv('UNINSTALLED_INTROSPECTION_SRCDIR', None)
if srcdir is not None:
    pylibdir = srcdir

sys.path.insert(0, pylibdir)

from giscanner.@TOOL_MODULE@ import @TOOL_FUNCTION@
sys.exit(@TOOL_FUNCTION@(sys.argv))
